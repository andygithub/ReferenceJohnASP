/*
Deployment script for Reference_John

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Reference_John"
:setvar DefaultFilePrefix "Reference_John"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[ApplicationExtendedProperties].[LastChangeDate] on table [dbo].[ApplicationExtendedProperties] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[ApplicationExtendedProperties])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[UserExtendedProperties].[LastChangeDate] on table [dbo].[UserExtendedProperties] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[UserExtendedProperties])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping DF__AddressTy__SortO__21B6055D...';


GO
ALTER TABLE [dbo].[AddressTypeOptionList] DROP CONSTRAINT [DF__AddressTy__SortO__21B6055D];


GO
PRINT N'Dropping DF__AddressTy__IsAct__22AA2996...';


GO
ALTER TABLE [dbo].[AddressTypeOptionList] DROP CONSTRAINT [DF__AddressTy__IsAct__22AA2996];


GO
PRINT N'Dropping DF__Ethnicity__SortO__239E4DCF...';


GO
ALTER TABLE [dbo].[EthnicityOptionList] DROP CONSTRAINT [DF__Ethnicity__SortO__239E4DCF];


GO
PRINT N'Dropping DF__Ethnicity__IsAct__24927208...';


GO
ALTER TABLE [dbo].[EthnicityOptionList] DROP CONSTRAINT [DF__Ethnicity__IsAct__24927208];


GO
PRINT N'Dropping DF__GenderOpt__SortO__25869641...';


GO
ALTER TABLE [dbo].[GenderOptionList] DROP CONSTRAINT [DF__GenderOpt__SortO__25869641];


GO
PRINT N'Dropping DF__GenderOpt__IsAct__267ABA7A...';


GO
ALTER TABLE [dbo].[GenderOptionList] DROP CONSTRAINT [DF__GenderOpt__IsAct__267ABA7A];


GO
PRINT N'Dropping DF__RaceOptio__SortO__276EDEB3...';


GO
ALTER TABLE [dbo].[RaceOptionList] DROP CONSTRAINT [DF__RaceOptio__SortO__276EDEB3];


GO
PRINT N'Dropping DF__RaceOptio__IsAct__286302EC...';


GO
ALTER TABLE [dbo].[RaceOptionList] DROP CONSTRAINT [DF__RaceOptio__IsAct__286302EC];


GO
PRINT N'Dropping DF__RegionOpt__SortO__29572725...';


GO
ALTER TABLE [dbo].[RegionOptionList] DROP CONSTRAINT [DF__RegionOpt__SortO__29572725];


GO
PRINT N'Dropping DF__RegionOpt__IsAct__2A4B4B5E...';


GO
ALTER TABLE [dbo].[RegionOptionList] DROP CONSTRAINT [DF__RegionOpt__IsAct__2A4B4B5E];


GO
PRINT N'Dropping FK_Address_AddressTypeOptionList...';


GO
ALTER TABLE [dbo].[Address] DROP CONSTRAINT [FK_Address_AddressTypeOptionList];


GO
PRINT N'Dropping FK_FormSimpleZero_EthnicityOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] DROP CONSTRAINT [FK_FormSimpleZero_EthnicityOptionList];


GO
PRINT N'Dropping FK_FormSimpleZeroHistory_EthnicityOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] DROP CONSTRAINT [FK_FormSimpleZeroHistory_EthnicityOptionList];


GO
PRINT N'Dropping FK_FormSimpleZero_GenderOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] DROP CONSTRAINT [FK_FormSimpleZero_GenderOptionList];


GO
PRINT N'Dropping FK_FormSimpleZeroHistory_GenderOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] DROP CONSTRAINT [FK_FormSimpleZeroHistory_GenderOptionList];


GO
PRINT N'Dropping FK_FormSimpleZero_RaceOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] DROP CONSTRAINT [FK_FormSimpleZero_RaceOptionList];


GO
PRINT N'Dropping FK_FormSimpleZeroHistory_RaceOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] DROP CONSTRAINT [FK_FormSimpleZeroHistory_RaceOptionList];


GO
PRINT N'Dropping FK_FormSimpleZero_RegionOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] DROP CONSTRAINT [FK_FormSimpleZero_RegionOptionList];


GO
PRINT N'Dropping FK_FormSimpleZeroHistory_RegionOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] DROP CONSTRAINT [FK_FormSimpleZeroHistory_RegionOptionList];


GO
PRINT N'Starting rebuilding table [dbo].[AddressTypeOptionList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AddressTypeOptionList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NOT NULL,
    [SortOrder]      INT           DEFAULT 1 NOT NULL,
    [IsActive]       INT           DEFAULT 1 NOT NULL,
    [StartDate]      DATETIME      NOT NULL,
    [EndDate]        DATETIME      NULL,
    [DateCreated]    DATETIME      DEFAULT GETDATE() NOT NULL,
    [LastChangeUser] NVARCHAR (50) NOT NULL,
    [LastChangeDate] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AddressTypeOptionList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AddressTypeOptionList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AddressTypeOptionList] ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
        SELECT   [Id],
                 [Name],
                 [SortOrder],
                 [IsActive],
                 [StartDate],
                 [EndDate],
                 [LastChangeUser],
                 [LastChangeDate]
        FROM     [dbo].[AddressTypeOptionList]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AddressTypeOptionList] OFF;
    END

DROP TABLE [dbo].[AddressTypeOptionList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AddressTypeOptionList]', N'AddressTypeOptionList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[ApplicationExtendedProperties]...';


GO
ALTER TABLE [dbo].[ApplicationExtendedProperties]
    ADD [LastChangeDate] DATETIME NOT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[EthnicityOptionList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EthnicityOptionList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NOT NULL,
    [SortOrder]      INT           DEFAULT 1 NOT NULL,
    [IsActive]       INT           DEFAULT 1 NOT NULL,
    [StartDate]      DATETIME      NOT NULL,
    [EndDate]        DATETIME      NULL,
    [DateCreated]    DATETIME      DEFAULT GETDATE() NOT NULL,
    [LastChangeUser] NVARCHAR (50) NOT NULL,
    [LastChangeDate] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EthnicityOptionList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EthnicityOptionList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EthnicityOptionList] ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
        SELECT   [Id],
                 [Name],
                 [SortOrder],
                 [IsActive],
                 [StartDate],
                 [EndDate],
                 [LastChangeUser],
                 [LastChangeDate]
        FROM     [dbo].[EthnicityOptionList]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EthnicityOptionList] OFF;
    END

DROP TABLE [dbo].[EthnicityOptionList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EthnicityOptionList]', N'EthnicityOptionList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GenderOptionList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GenderOptionList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NOT NULL,
    [SortOrder]      INT           DEFAULT 1 NOT NULL,
    [IsActive]       INT           DEFAULT 1 NOT NULL,
    [StartDate]      DATETIME      NOT NULL,
    [EndDate]        DATETIME      NULL,
    [DateCreated]    DATETIME      DEFAULT GETDATE() NOT NULL,
    [LastChangeUser] NVARCHAR (50) NOT NULL,
    [LastChangeDate] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GenderOptionList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GenderOptionList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GenderOptionList] ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
        SELECT   [Id],
                 [Name],
                 [SortOrder],
                 [IsActive],
                 [StartDate],
                 [EndDate],
                 [LastChangeUser],
                 [LastChangeDate]
        FROM     [dbo].[GenderOptionList]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GenderOptionList] OFF;
    END

DROP TABLE [dbo].[GenderOptionList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GenderOptionList]', N'GenderOptionList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[RaceOptionList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RaceOptionList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NOT NULL,
    [SortOrder]      INT           DEFAULT 1 NOT NULL,
    [IsActive]       INT           DEFAULT 1 NOT NULL,
    [StartDate]      DATETIME      NOT NULL,
    [EndDate]        DATETIME      NULL,
    [DateCreated]    DATETIME      DEFAULT GETDATE() NOT NULL,
    [LastChangeUser] NVARCHAR (50) NOT NULL,
    [LastChangeDate] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RaceOptionList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RaceOptionList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RaceOptionList] ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
        SELECT   [Id],
                 [Name],
                 [SortOrder],
                 [IsActive],
                 [StartDate],
                 [EndDate],
                 [LastChangeUser],
                 [LastChangeDate]
        FROM     [dbo].[RaceOptionList]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RaceOptionList] OFF;
    END

DROP TABLE [dbo].[RaceOptionList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RaceOptionList]', N'RaceOptionList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[RegionOptionList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_RegionOptionList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NOT NULL,
    [SortOrder]      INT           DEFAULT 1 NOT NULL,
    [IsActive]       INT           DEFAULT 1 NOT NULL,
    [StartDate]      DATETIME      NOT NULL,
    [EndDate]        DATETIME      NULL,
    [DateCreated]    DATETIME      DEFAULT GETDATE() NOT NULL,
    [LastChangeUser] NVARCHAR (50) NOT NULL,
    [LastChangeDate] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[RegionOptionList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RegionOptionList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_RegionOptionList] ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
        SELECT   [Id],
                 [Name],
                 [SortOrder],
                 [IsActive],
                 [StartDate],
                 [EndDate],
                 [LastChangeUser],
                 [LastChangeDate]
        FROM     [dbo].[RegionOptionList]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_RegionOptionList] OFF;
    END

DROP TABLE [dbo].[RegionOptionList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_RegionOptionList]', N'RegionOptionList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[UserExtendedProperties]...';


GO
ALTER TABLE [dbo].[UserExtendedProperties]
    ADD [LastChangeDate] DATETIME NOT NULL;


GO
PRINT N'Creating Default Constraint on [dbo].[Address]....';


GO
ALTER TABLE [dbo].[Address]
    ADD DEFAULT GETDATE() FOR [DateCreated];


GO
PRINT N'Creating Default Constraint on [dbo].[FormSimpleZero]....';


GO
ALTER TABLE [dbo].[FormSimpleZero]
    ADD DEFAULT GETDATE() FOR [DateCreated];


GO
PRINT N'Creating FK_Address_AddressTypeOptionList...';


GO
ALTER TABLE [dbo].[Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Address_AddressTypeOptionList] FOREIGN KEY ([AddressTypeId]) REFERENCES [dbo].[AddressTypeOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZero_EthnicityOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZero_EthnicityOptionList] FOREIGN KEY ([EthnicityId]) REFERENCES [dbo].[EthnicityOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZeroHistory_EthnicityOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZeroHistory_EthnicityOptionList] FOREIGN KEY ([EthnicityId]) REFERENCES [dbo].[EthnicityOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZero_GenderOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZero_GenderOptionList] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[GenderOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZeroHistory_GenderOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZeroHistory_GenderOptionList] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[GenderOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZero_RaceOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZero_RaceOptionList] FOREIGN KEY ([RaceId]) REFERENCES [dbo].[RaceOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZeroHistory_RaceOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZeroHistory_RaceOptionList] FOREIGN KEY ([RaceId]) REFERENCES [dbo].[RaceOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZero_RegionOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZero_RegionOptionList] FOREIGN KEY ([RegionId]) REFERENCES [dbo].[RegionOptionList] ([Id]);


GO
PRINT N'Creating FK_FormSimpleZeroHistory_RegionOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZeroHistory_RegionOptionList] FOREIGN KEY ([RegionId]) REFERENCES [dbo].[RegionOptionList] ([Id]);


GO
PRINT N'Altering [dbo].[SearchResults]...';


GO
ALTER VIEW [dbo].[SearchResults]
	AS SELECT 
	f.[Id] as [FormId], [FirstName], [LastName], [GenderId], [RaceId], [RegionId], [EthnicityId], f.[DateCreated], f.[LastChangeUser], f.[LastChangeDate],
	e.Name as EthnicityName, g.Name as GenderName
	FROM [dbo].[FormSimpleZero] f
		inner join [dbo].[EthnicityOptionList] e on f.EthnicityId=e.Id
		inner join [dbo].[GenderOptionList] g on f.GenderId=g.Id
GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary Key for table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text value of the option list record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[SortOrder].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the sort order of the option list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'SortOrder';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[IsActive].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to determine if the record is active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'IsActive';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date when the record becomes active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date when for the active record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[LastChangeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last user to modify the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeUser';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[LastChangeDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last change date for the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeDate';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary Key for table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text value of the option list record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[SortOrder].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the sort order of the option list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'SortOrder';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[IsActive].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to determine if the record is active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'IsActive';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date when the record becomes active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date when for the active record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[LastChangeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last user to modify the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeUser';


GO
PRINT N'Creating [dbo].[EthnicityOptionList].[LastChangeDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last change date for the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'EthnicityOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeDate';


GO
PRINT N'Creating [dbo].[GenderOptionList].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary Key for table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [dbo].[GenderOptionList].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text value of the option list record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[GenderOptionList].[SortOrder].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the sort order of the option list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'SortOrder';


GO
PRINT N'Creating [dbo].[GenderOptionList].[IsActive].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to determine if the record is active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'IsActive';


GO
PRINT N'Creating [dbo].[GenderOptionList].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date when the record becomes active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[GenderOptionList].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date when for the active record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[GenderOptionList].[LastChangeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last user to modify the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeUser';


GO
PRINT N'Creating [dbo].[GenderOptionList].[LastChangeDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last change date for the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GenderOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeDate';


GO
PRINT N'Creating [dbo].[RaceOptionList].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary Key for table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [dbo].[RaceOptionList].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text value of the option list record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[RaceOptionList].[SortOrder].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the sort order of the option list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'SortOrder';


GO
PRINT N'Creating [dbo].[RaceOptionList].[IsActive].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to determine if the record is active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'IsActive';


GO
PRINT N'Creating [dbo].[RaceOptionList].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date when the record becomes active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[RaceOptionList].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date when for the active record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[RaceOptionList].[LastChangeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last user to modify the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeUser';


GO
PRINT N'Creating [dbo].[RaceOptionList].[LastChangeDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last change date for the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RaceOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeDate';


GO
PRINT N'Creating [dbo].[RegionOptionList].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary Key for table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [dbo].[RegionOptionList].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text value of the option list record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[RegionOptionList].[SortOrder].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the sort order of the option list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'SortOrder';


GO
PRINT N'Creating [dbo].[RegionOptionList].[IsActive].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to determine if the record is active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'IsActive';


GO
PRINT N'Creating [dbo].[RegionOptionList].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date when the record becomes active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[RegionOptionList].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date when for the active record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[RegionOptionList].[LastChangeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last user to modify the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeUser';


GO
PRINT N'Creating [dbo].[RegionOptionList].[LastChangeDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last change date for the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'RegionOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeDate';


GO
PRINT N'Refreshing [dbo].[GetApplicationProperty]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetApplicationProperty]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
			   SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET IDENTITY_INSERT [dbo].[EthnicityOptionList] ON

Merge into [dbo].[EthnicityOptionList] As Target
Using (values
	(1, N'Hispanic', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Othe', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[EthnicityOptionList] Off

---
SET IDENTITY_INSERT [dbo].[GenderOptionList] ON

Merge into [dbo].[GenderOptionList] As Target
Using (values
	(1, N'Male', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Female', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[GenderOptionList] Off

---
SET IDENTITY_INSERT [dbo].[RaceOptionList] ON

Merge into [dbo].[RaceOptionList] As Target
Using (values
	(1, N'White', 0, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Black', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(3, N'Purple', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[RaceOptionList] Off

---
SET IDENTITY_INSERT [dbo].[RegionOptionList] ON

Merge into [dbo].[RegionOptionList] As Target
Using (values
	(1, N'East', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'West', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(3, N'North', 4, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(4, N'South', 3, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[RegionOptionList] Off

---
SET IDENTITY_INSERT [dbo].[AddressTypeOptionList] ON

Merge into [dbo].[AddressTypeOptionList] As Target
Using (values
	(1, N'Mail', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'none', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Residential', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'none', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[AddressTypeOptionList] Off
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Address] WITH CHECK CHECK CONSTRAINT [FK_Address_AddressTypeOptionList];

ALTER TABLE [dbo].[FormSimpleZero] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZero_EthnicityOptionList];

ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZeroHistory_EthnicityOptionList];

ALTER TABLE [dbo].[FormSimpleZero] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZero_GenderOptionList];

ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZeroHistory_GenderOptionList];

ALTER TABLE [dbo].[FormSimpleZero] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZero_RaceOptionList];

ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZeroHistory_RaceOptionList];

ALTER TABLE [dbo].[FormSimpleZero] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZero_RegionOptionList];

ALTER TABLE [dbo].[FormSimpleZeroHistory] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZeroHistory_RegionOptionList];


GO
PRINT N'Update complete.';


GO
