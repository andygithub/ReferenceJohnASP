/*
Deployment script for Reference_John

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Reference_John"
:setvar DefaultFilePrefix "Reference_John"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Address].[AddressTypeId] on table [dbo].[Address] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Address])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping FK_Address_FormSimpleZeroId...';


GO
ALTER TABLE [dbo].[Address] DROP CONSTRAINT [FK_Address_FormSimpleZeroId];


GO
PRINT N'Starting rebuilding table [dbo].[Address]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Address] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [FormSimpleZeroId] INT           NOT NULL,
    [AddressTypeId]    INT           NOT NULL,
    [AddressLine1]     NVARCHAR (50) NOT NULL,
    [AddressLine2]     NVARCHAR (50) NULL,
    [AddressLine3]     NVARCHAR (50) NULL,
    [City]             NVARCHAR (50) NULL,
    [State]            NVARCHAR (50) NULL,
    [Zip]              NVARCHAR (50) NULL,
    [DateCreated]      DATETIME      NOT NULL,
    [LastChangeUser]   NVARCHAR (50) NOT NULL,
    [LastChangeDate]   DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Address])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Address] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Address] ([Id], [FormSimpleZeroId], [AddressLine1], [AddressLine2], [AddressLine3], [City], [State], [Zip], [DateCreated], [LastChangeUser], [LastChangeDate])
        SELECT   [Id],
                 [FormSimpleZeroId],
                 [AddressLine1],
                 [AddressLine2],
                 [AddressLine3],
                 [City],
                 [State],
                 [Zip],
                 [DateCreated],
                 [LastChangeUser],
                 [LastChangeDate]
        FROM     [dbo].[Address]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Address] OFF;
    END

DROP TABLE [dbo].[Address];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Address]', N'Address';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AddressTypeOptionList]...';


GO
CREATE TABLE [dbo].[AddressTypeOptionList] (
    [Id]             INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NOT NULL,
    [SortOrder]      INT           NOT NULL,
    [IsActive]       INT           NOT NULL,
    [StartDate]      DATETIME      NOT NULL,
    [EndDate]        DATETIME      NULL,
    [LastChangeUser] NVARCHAR (50) NOT NULL,
    [LastChangeDate] DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[AddressTypeOptionList]....';


GO
ALTER TABLE [dbo].[AddressTypeOptionList]
    ADD DEFAULT 1 FOR [SortOrder];


GO
PRINT N'Creating Default Constraint on [dbo].[AddressTypeOptionList]....';


GO
ALTER TABLE [dbo].[AddressTypeOptionList]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating FK_Address_FormSimpleZeroId...';


GO
ALTER TABLE [dbo].[Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Address_FormSimpleZeroId] FOREIGN KEY ([FormSimpleZeroId]) REFERENCES [dbo].[FormSimpleZero] ([Id]);


GO
PRINT N'Creating FK_Address_AddressTypeOptionList...';


GO
ALTER TABLE [dbo].[Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Address_AddressTypeOptionList] FOREIGN KEY ([AddressTypeId]) REFERENCES [dbo].[AddressTypeOptionList] ([Id]);


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[Id].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary Key for table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'Id';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text value of the option list record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[SortOrder].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the sort order of the option list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'SortOrder';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[IsActive].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to determine if the record is active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'IsActive';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date when the record becomes active.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date when for the active record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[LastChangeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last user to modify the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeUser';


GO
PRINT N'Creating [dbo].[AddressTypeOptionList].[LastChangeDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last change date for the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AddressTypeOptionList', @level2type = N'COLUMN', @level2name = N'LastChangeDate';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Address] WITH CHECK CHECK CONSTRAINT [FK_Address_FormSimpleZeroId];

ALTER TABLE [dbo].[Address] WITH CHECK CHECK CONSTRAINT [FK_Address_AddressTypeOptionList];


GO
PRINT N'Update complete.';


GO
