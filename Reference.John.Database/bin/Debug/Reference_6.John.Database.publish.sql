/*
Deployment script for Reference_John

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Reference_John"
:setvar DefaultFilePrefix "Reference_John"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column GenderId on table [dbo].[FormSimpleZero] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[FormSimpleZero])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping FK_FormSimpleZero_GenderOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] DROP CONSTRAINT [FK_FormSimpleZero_GenderOptionList];


GO
PRINT N'Altering [dbo].[FormSimpleZero]...';


GO
ALTER TABLE [dbo].[FormSimpleZero] ALTER COLUMN [GenderId] INT NOT NULL;


GO
PRINT N'Creating FK_FormSimpleZero_GenderOptionList...';


GO
ALTER TABLE [dbo].[FormSimpleZero] WITH NOCHECK
    ADD CONSTRAINT [FK_FormSimpleZero_GenderOptionList] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[GenderOptionList] ([Id]);


GO
PRINT N'Refreshing [dbo].[SearchResults]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[SearchResults]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
			   SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET IDENTITY_INSERT [dbo].[EthnicityOptionList] ON

Merge into [dbo].[EthnicityOptionList] As Target
Using (values
	(1, N'Hispanic', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Othe', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[EthnicityOptionList] Off

---
SET IDENTITY_INSERT [dbo].[GenderOptionList] ON

Merge into [dbo].[GenderOptionList] As Target
Using (values
	(1, N'Male', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Female', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[GenderOptionList] Off

---
SET IDENTITY_INSERT [dbo].[RaceOptionList] ON

Merge into [dbo].[RaceOptionList] As Target
Using (values
	(1, N'White', 0, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Black', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(3, N'Purple', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[RaceOptionList] Off

---
SET IDENTITY_INSERT [dbo].[RegionOptionList] ON

Merge into [dbo].[RegionOptionList] As Target
Using (values
	(1, N'East', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'West', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(3, N'North', 4, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime)),
	(4, N'South', 3, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'zero', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[RegionOptionList] Off

---
SET IDENTITY_INSERT [dbo].[AddressTypeOptionList] ON

Merge into [dbo].[AddressTypeOptionList] As Target
Using (values
	(1, N'Mail', 1, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'none', CAST(0x0000A2A600000000 AS DateTime)),
	(2, N'Residential', 2, 1, CAST(0x0000A2A600000000 AS DateTime), NULL, N'none', CAST(0x0000A2A600000000 AS DateTime))
)
As Source ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
On Target.Id = Source.Id
--update matched rows
when matched then	
	update set name = source.name,[SortOrder]=source.[SortOrder], [IsActive]=source.[IsActive], [StartDate]=source.[StartDate], [EndDate]=source.[EndDate], [LastChangeUser]=source.[LastChangeUser], [LastChangeDate]=source.[LastChangeDate]
--insert if no match
when not matched then
	INSERT ([Id], [Name], [SortOrder], [IsActive], [StartDate], [EndDate], [LastChangeUser], [LastChangeDate])
	VALUES (source.[Id], source.[Name], source.[SortOrder], source.[IsActive], source.[StartDate], source.[EndDate], source.[LastChangeUser], source.[LastChangeDate])
	;

SET IDENTITY_INSERT [dbo].[AddressTypeOptionList] Off
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[FormSimpleZero] WITH CHECK CHECK CONSTRAINT [FK_FormSimpleZero_GenderOptionList];


GO
PRINT N'Update complete.';


GO
